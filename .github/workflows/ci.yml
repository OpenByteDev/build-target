name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always
  RUSTDOCFLAGS: "--deny warnings"
  RUSTFLAGS: "--deny warnings"
      

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        toolchain: ["stable", "nightly"]
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-pc-windows-gnu
          - i686-pc-windows-msvc
          - x86_64-apple-darwin
          - i686-pc-windows-gnu
          - aarch64-unknown-linux-gnu
          - armv7-unknown-linux-gnueabihf
          - aarch64-apple-darwin
          - wasm32-unknown-unknown
          - wasm32-wasi
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-pc-windows-gnu
            os: windows-latest
          - target: i686-pc-windows-msvc
            os: windows-latest
          - target: i686-pc-windows-gnu
            os: windows-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - target: armv7-unknown-linux-gnueabihf
            os: ubuntu-latest
          - target: wasm32-unknown-unknown
            os: ubuntu-latest
          - target: wasm32-wasi
            os: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install latest ${{ matrix.toolchain }}
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
          target: ${{ matrix.target }}
      - name: Build
        run: cargo build --target ${{ matrix.target }}
      - name: Test
        run: cargo test --target ${{ matrix.target }} --all-targets

  documentation:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install latest nightly
      uses: dtolnay/rust-toolchain@nightly
    - name: Generate documentation
      run: cargo doc --all-features
    - name: Install cargo-deadlinks
      run: cargo install cargo-deadlinks
    - name: Check dead links in doc
      run: cargo deadlinks

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install latest nightly
        uses: dtolnay/rust-toolchain@nightly
        with:
            components: clippy
            
      - name: Clippy check
        run: cargo clippy --all-features
          
  fmt:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install latest nightly
      uses: dtolnay/rust-toolchain@nightly
      with:
          components: rustfmt
          
    - name: Format check
      run: cargo fmt --all -- --check
